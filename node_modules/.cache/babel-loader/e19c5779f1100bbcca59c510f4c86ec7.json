{"ast":null,"code":"var _jsxFileName = \"/home/mrdubey/Advance-React-Training/src/Components/weatherdetails/Graph.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler, Legend } from \"chart.js\";\nimport { useAppSelector } from \"../../app/hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"\"\n    }\n  }\n};\n\nconst Graph = props => {\n  _s();\n\n  const list = useAppSelector(state => state.graph.list);\n  const labels = list.map(item => {\n    const date = new Date(item.dt * 1000);\n    return date.toLocaleString(\"en-US\", {\n      day: \"numeric\"\n    }) + \" \" + date.toLocaleString(\"en-US\", {\n      month: \"long\"\n    });\n  });\n  const weatdata = {\n    labels,\n    datasets: [{\n      fill: true,\n      data: list.map(item => {\n        return parseFloat((item.main.temp - 273.15).toFixed(1));\n      }),\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      pointRadius: 3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: weatdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Graph, \"wPPqvOa1a8WwyfBljW6ukvD1OGg=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","useAppSelector","register","options","responsive","plugins","legend","position","title","display","text","Graph","props","list","state","graph","labels","map","item","date","Date","dt","toLocaleString","day","month","weatdata","datasets","fill","data","parseFloat","main","temp","toFixed","borderColor","backgroundColor","pointRadius"],"sources":["/home/mrdubey/Advance-React-Training/src/Components/weatherdetails/Graph.tsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n} from \"chart.js\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { IGraph } from \"./Igraph\";\nimport { setList } from \"../../app/reducers/weatherreport/graphSlice\";\nimport { useAppSelector } from \"../../app/hook\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\" as const,\n    },\n    title: {\n      display: true,\n      text: \"\",\n    },\n  },\n};\ninterface Iprop{\nyaxis: number[];\nxaxis: string[];\n}\nconst Graph = (props) => {\n  \n  const list = useAppSelector((state) => state.graph.list);\n  const labels = list.map((item) => {\n    const date = new Date(item.dt * 1000);\n    return (\n      date.toLocaleString(\"en-US\", { day: \"numeric\" }) +\n      \" \" +\n      date.toLocaleString(\"en-US\", { month: \"long\" })\n    );\n  });\n  const weatdata = {\n    labels,\n    datasets: [\n      {\n        fill: true,\n        data: list.map((item) => {\n          return parseFloat((item.main.temp - 273.15).toFixed(1));\n        }),\n        borderColor: \"rgb(53, 162, 235)\",\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n        pointRadius: 3,\n      },\n    ],\n  };\n  return (\n    <>\n      <Line options={options} data={weatdata} />\n    </>\n  );\n};\nexport default Graph;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,EASEC,MATF,QAUO,UAVP;AAeA,SAASC,cAAT,QAA+B,gBAA/B;;;AACAT,OAAO,CAACU,QAAR,CACET,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,MARF;AAUA,MAAMG,OAAO,GAAG;EACdC,UAAU,EAAE,IADE;EAEdC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IADJ,CADD;IAIPC,KAAK,EAAE;MACLC,OAAO,EAAE,IADJ;MAELC,IAAI,EAAE;IAFD;EAJA;AAFK,CAAhB;;AAgBA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EAEvB,MAAMC,IAAI,GAAGZ,cAAc,CAAEa,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,IAAxB,CAA3B;EACA,MAAMG,MAAM,GAAGH,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;IAChC,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,EAAL,GAAU,IAAnB,CAAb;IACA,OACEF,IAAI,CAACG,cAAL,CAAoB,OAApB,EAA6B;MAAEC,GAAG,EAAE;IAAP,CAA7B,IACA,GADA,GAEAJ,IAAI,CAACG,cAAL,CAAoB,OAApB,EAA6B;MAAEE,KAAK,EAAE;IAAT,CAA7B,CAHF;EAKD,CAPc,CAAf;EAQA,MAAMC,QAAQ,GAAG;IACfT,MADe;IAEfU,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,IADR;MAEEC,IAAI,EAAEf,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;QACvB,OAAOW,UAAU,CAAC,CAACX,IAAI,CAACY,IAAL,CAAUC,IAAV,GAAiB,MAAlB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAD,CAAjB;MACD,CAFK,CAFR;MAKEC,WAAW,EAAE,mBALf;MAMEC,eAAe,EAAE,yBANnB;MAOEC,WAAW,EAAE;IAPf,CADQ;EAFK,CAAjB;EAcA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,OAAO,EAAEhC,OAAf;MAAwB,IAAI,EAAEsB;IAA9B;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD,CA9BD;;GAAMd,K;UAESV,c;;;KAFTU,K;AA+BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}